// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AcmeMonthly.Migrations
{
    [DbContext(typeof(AcmeContext))]
    partial class AcmeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("AcmeMonthly.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressLine3")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CountryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("AcmeMonthly.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AddressId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("AcmeMonthly.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryCode = "AFG",
                            Name = "Afghanistan"
                        },
                        new
                        {
                            Id = 2,
                            CountryCode = "SLB",
                            Name = "Albania"
                        },
                        new
                        {
                            Id = 3,
                            CountryCode = "DZA",
                            Name = "Algeria"
                        },
                        new
                        {
                            Id = 4,
                            CountryCode = "AND",
                            Name = "Andorra"
                        },
                        new
                        {
                            Id = 5,
                            CountryCode = "AGO",
                            Name = "Angola"
                        },
                        new
                        {
                            Id = 6,
                            CountryCode = "ATG",
                            Name = "Antigua and Barbuda"
                        },
                        new
                        {
                            Id = 7,
                            CountryCode = "ARG",
                            Name = "Argentina"
                        },
                        new
                        {
                            Id = 8,
                            CountryCode = "ARM",
                            Name = "Armenia"
                        },
                        new
                        {
                            Id = 9,
                            CountryCode = "ABW",
                            Name = "Aruba"
                        },
                        new
                        {
                            Id = 10,
                            CountryCode = "AUS",
                            Name = "Australia"
                        },
                        new
                        {
                            Id = 11,
                            CountryCode = "AUT",
                            Name = "Austria"
                        },
                        new
                        {
                            Id = 12,
                            CountryCode = "NZL",
                            Name = "New Zealand"
                        });
                });

            modelBuilder.Entity("AcmeMonthly.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dave Davies"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bob Smith"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Rachel Jenkins"
                        });
                });

            modelBuilder.Entity("AcmeMonthly.Entities.Publication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Publications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "You'd better off using the internet",
                            Name = "Acme EF Coding For Dummies"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Practical Advice For Getting Burned",
                            Name = "How To Lead Teams"
                        },
                        new
                        {
                            Id = 3,
                            Description = "But don't tell them",
                            Name = "The Customer Is Not Right "
                        });
                });

            modelBuilder.Entity("AcmeMonthly.Entities.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DeliveryAddressId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("PublicationId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeliveryAddressId");

                    b.HasIndex("PublicationId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("AcmeMonthly.Entities.Address", b =>
                {
                    b.HasOne("AcmeMonthly.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("AcmeMonthly.Entities.Company", b =>
                {
                    b.HasOne("AcmeMonthly.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("AcmeMonthly.Entities.Subscription", b =>
                {
                    b.HasOne("AcmeMonthly.Entities.Customer", "Customer")
                        .WithMany("Subscriptions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AcmeMonthly.Entities.Address", "DeliveryAddress")
                        .WithMany()
                        .HasForeignKey("DeliveryAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AcmeMonthly.Entities.Publication", "Publication")
                        .WithMany("Subscriptions")
                        .HasForeignKey("PublicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("DeliveryAddress");

                    b.Navigation("Publication");
                });

            modelBuilder.Entity("AcmeMonthly.Entities.Customer", b =>
                {
                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("AcmeMonthly.Entities.Publication", b =>
                {
                    b.Navigation("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
